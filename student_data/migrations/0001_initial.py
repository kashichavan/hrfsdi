# Generated by Django 5.2 on 2025-04-29 17:48

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('company_code', models.CharField(max_length=20, unique=True)),
                ('requirement_date', models.DateField(blank=True, null=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('schedule_status', models.CharField(choices=[('not_scheduled', 'Not Scheduled'), ('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='not_scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule_time', models.TimeField(blank=True, null=True)),
                ('escalation', models.TextField(blank=True, help_text='Details about the escalation raised', null=True)),
                ('escalation_raised_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('core_java', 'Core Java'), ('advanced_java', 'Advanced Java'), ('web_technology', 'Web Technology'), ('sql', 'SQL'), ('ds_algo', 'Data Structures & Algorithms'), ('python', 'Python'), ('communication', 'Communication Skills'), ('reactjs', 'ReactJS'), ('other', 'Other')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('degree', models.CharField(max_length=50)),
                ('stream', models.CharField(max_length=50)),
                ('yop', models.IntegerField(verbose_name='Year of Passing')),
                ('tenth_percent', models.FloatField(verbose_name='10th Percentage')),
                ('twelfth_percent', models.FloatField(verbose_name='12th Percentage')),
                ('degree_percent', models.FloatField(verbose_name='Degree Percentage')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('type_of_data', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_requirements', models.IntegerField(default=0)),
                ('scheduled_requirements', models.IntegerField(default=0)),
                ('is_placed', models.BooleanField(default=False, verbose_name='Placed Status')),
                ('is_dropout', models.BooleanField(default=False, help_text='Whether the student has dropped out or not', verbose_name='Dropout Status')),
                ('dropout_date', models.DateField(blank=True, help_text='Date when the student dropped out', null=True, verbose_name='Dropout Date')),
                ('dropout_reason', models.TextField(blank=True, help_text='Explanation for why the student dropped out', null=True, verbose_name='Reason for Dropout')),
                ('overall_technical_rating', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('average', 'Average'), ('bad', 'Bad')], help_text='Overall technical rating based on subject ratings', max_length=20, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='student_dat_name_b06731_idx'), models.Index(fields=['gender'], name='student_dat_gender_d6e048_idx'), models.Index(fields=['degree'], name='student_dat_degree_17bc70_idx'), models.Index(fields=['is_dropout'], name='student_dat_is_drop_2c4dc7_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScheduledRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField()),
                ('result', models.CharField(choices=[('pending', 'Result Pending'), ('selected', 'Got Selects'), ('no_selects', 'No Selects'), ('partial_scheduled', 'Partial Scheduled'), ('cancelled', 'Drive Cancelled'), ('postponed', 'Drive Postponed')], default='pending', max_length=20)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requirement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_details', to='student_data.requirement')),
                ('students_appeared', models.ManyToManyField(blank=True, to='student_data.student')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='RequirementStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('on_hold', 'On Hold')], default='pending', max_length=20)),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Interview Feedback/Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_data.requirement')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_data.student')),
            ],
        ),
        migrations.AddField(
            model_name='requirement',
            name='students',
            field=models.ManyToManyField(through='student_data.RequirementStudent', to='student_data.student'),
        ),
        migrations.CreateModel(
            name='GotPlacedOutside',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('package', models.CharField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, max_length=100, null=True)),
                ('placed_date', models.DateField(default=django.utils.timezone.now)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='placed_outside', to='student_data.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSubjectRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('average', 'Average'), ('bad', 'Bad')], max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('evaluated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('evaluated_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_ratings', to='student_data.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_data.subject')),
            ],
            options={
                'verbose_name': 'Student Subject Rating',
                'verbose_name_plural': 'Student Subject Ratings',
                'ordering': ['student__name', 'subject__name'],
            },
        ),
        migrations.AddIndex(
            model_name='requirementstudent',
            index=models.Index(fields=['status'], name='student_dat_status_c1a160_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='requirementstudent',
            unique_together={('student', 'requirement')},
        ),
        migrations.AlterUniqueTogether(
            name='studentsubjectrating',
            unique_together={('student', 'subject')},
        ),
    ]
