# Generated by Django 5.2 on 2025-04-12 13:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('student_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_code', models.CharField(max_length=50)),
                ('requirement_date', models.DateField()),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-requirement_date'],
            },
        ),
        migrations.CreateModel(
            name='RequirementStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('on_hold', 'On Hold')], default='pending', max_length=50)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_data.requirement')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_data.student')),
            ],
            options={
                'unique_together': {('requirement', 'student')},
            },
        ),
        migrations.AddField(
            model_name='requirement',
            name='students',
            field=models.ManyToManyField(related_name='requirements', through='student_data.RequirementStudent', to='student_data.student'),
        ),
    ]
